.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "KAFKACAT" "1" "January 2015" "" ""
.
.SH "NAME"
\fBkafkacat\fR \- generic producer and consumer for Apache Kafka
.
.SH "SYNOPSIS"
\fBkafkacat\fR \-C [generic options] [\-o offset] [\-e] [\-O] [\-u] \-b brokers \-t topic
.
.P
\fBkafkacat\fR \-P [generic options] [\-z snappy | gzip] [\-p \-1] [file [\|\.\|\.\|\.]] \-b brokers \-t topic
.
.P
\fBkafkacat\fR \-L [generic options] [\-t topic]
.
.SH "DESCRIPTION"
\fBkafkacat\fR is a generic non\-JVM producer and consumer for Apache Kafka 0\.8, think of it as a netcat for Kafka\.
.
.P
In producer mode ( \-P ), \fBkafkacat\fR reads messages from stdin, delimited with a configurable delimeter and produces them to the provided Kafka cluster, topic and partition\. In consumer mode ( \-C ), \fBkafkacat\fR reads messages from a topic and partition and prints them to stdout using the configured message delimiter\.
.
.P
If neither \-P or \-C are specified \fBkafkacat\fR attempts to figure out the mode automatically based on stdin/stdout tty types\.
.
.P
\fBkafkacat\fR also features a metadata list mode ( \-L ), to display the current state of the Kafka cluster and its topics and partitions\.
.
.SH "OPTIONS"
.
.SS "Generic Options"
.
.IP "\[ci]" 4
\fB\-t <topic>\fR Topic to consume from, produce to, or list\.
.
.IP "\[ci]" 4
\fB\-b <brokers>\fR Comma separated list of broker(s) to bootstrap of the form "host[:port][,\|\.\|\.\|\.]", e\.g\. "host1:9292,host2:9293"\.
.
.IP "\[ci]" 4
\fB\-p <partition>\fR Partition\.
.
.IP "\[ci]" 4
\fB\-D <delim>\fR Message delimiter character: a\-z\.\. | \er | \en | \et | \exNN [default: \en]\.
.
.IP "\[ci]" 4
\fB\-K <delim>\fR Key delimiter character: a\-z\.\. | \er | \en | \et | \exNN\.
.
.IP "\[ci]" 4
\fB\-c <count>\fR Limit message count\. For the producer, exit after producing \fB<count>\fR messages\. For the consumer, exit after consuming \fB<count>\fR messages\.
.
.IP "\[ci]" 4
\fB\-X list|dump|<prop>=<val>\fR
.
.IP "\[ci]" 4
\fBlist\fR will list available librdkafka configuration properties\.
.
.IP "\[ci]" 4
\fBdump\fR will dump the configuration and exit\.
.
.IP "\[ci]" 4
\fB<prop>=<val>\fR will set the property \fIprop\fR to value \fIval\fR\. Properties prefixed with "topic" are applied as topic properties\.
.
.IP "" 0

.
.IP "\[ci]" 4
\fB\-d <dbg>\fR Enable librdkafka debugging\. List of comma separated labels\. See librdkafka documentation for supported values\.
.
.IP "\[ci]" 4
\fB\-q\fR Quiet mode (set verbosity to 0)\.
.
.IP "\[ci]" 4
\fB\-v\fR Increase verbosity, can be called multiple time\.
.
.IP "" 0
.
.SS "Producer Options"
.
.IP "\[ci]" 4
\fB\-z snappy|gzip\fR Message compression [default: none]\.
.
.IP "\[ci]" 4
\fB\-p \-1\fR Use random partitionner\.
.
.IP "\[ci]" 4
\fB\-T\fR Output sent messages to stdout, acting like tee\.
.
.IP "" 0
.
.SS "Consumer Options"
.
.IP "\[ci]" 4
\fB\-o beginning|end|stored|<offset>|\-<offset>\fR Offset to start consuming from\.
.
.IP "\[ci]" 4
\fBbeginning\fR will start at the beginning\.
.
.IP "\[ci]" 4
\fBend\fR will start at the end\.
.
.IP "\[ci]" 4
\fBstored\fR will start at the last stored offset\.
.
.IP "\[ci]" 4
\fB<offset>\fR will start at absolute offset\.
.
.IP "\[ci]" 4
\fB\-<offset>\fR will start at relative offset from the end\.
.
.IP "" 0

.
.IP "\[ci]" 4
\fB\-e\fR Exit consuming after last message received\.
.
.IP "\[ci]" 4
\fB\-O\fR Print message offset using \fB\-K\fR delimiter\.
.
.IP "" 0

